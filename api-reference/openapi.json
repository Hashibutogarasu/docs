{
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "AppController_getVersion",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["App"]
      }
    },
    "/ping": {
      "get": {
        "operationId": "AppController_getPing",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["App"]
      }
    },
    "/raw-ping": {
      "get": {
        "operationId": "AppController_getRawPing",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["App"]
      }
    },
    "/user-read": {
      "get": {
        "operationId": "AppController_userRead",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["App"]
      }
    },
    "/admin-read": {
      "get": {
        "operationId": "AppController_adminRead",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["App"]
      }
    },
    "/account/reset-password": {
      "post": {
        "operationId": "AccountController_resetPassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ResetPasswordDto" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResetPasswordResponseDto"
                }
              }
            }
          },
          "400": {
            "schema": {
              "~standard": { "vendor": "zod", "version": 1 },
              "def": {
                "type": "object",
                "shape": {
                  "key": {
                    "~standard": { "vendor": "zod", "version": 1 },
                    "def": {
                      "type": "default",
                      "innerType": {
                        "~standard": { "vendor": "zod", "version": 1 },
                        "def": { "type": "string" },
                        "type": "string",
                        "format": null,
                        "minLength": null,
                        "maxLength": null
                      },
                      "defaultValue": "AppErrorCode"
                    },
                    "type": "default"
                  },
                  "code": {
                    "~standard": { "vendor": "zod", "version": 1 },
                    "def": {
                      "type": "default",
                      "innerType": {
                        "~standard": { "vendor": "zod", "version": 1 },
                        "def": { "type": "number", "checks": [] },
                        "type": "number",
                        "minValue": null,
                        "maxValue": null,
                        "isInt": false,
                        "isFinite": true,
                        "format": null
                      },
                      "defaultValue": 400
                    },
                    "type": "default"
                  },
                  "isHttpError": {
                    "~standard": { "vendor": "zod", "version": 1 },
                    "def": {
                      "type": "default",
                      "innerType": {
                        "~standard": { "vendor": "zod", "version": 1 },
                        "def": { "type": "boolean" },
                        "type": "boolean"
                      },
                      "defaultValue": true
                    },
                    "type": "default"
                  },
                  "name": {
                    "~standard": { "vendor": "zod", "version": 1 },
                    "def": {
                      "type": "default",
                      "innerType": {
                        "~standard": { "vendor": "zod", "version": 1 },
                        "def": { "type": "string" },
                        "type": "string",
                        "format": null,
                        "minLength": null,
                        "maxLength": null
                      },
                      "defaultValue": "AppErrorCode"
                    },
                    "type": "default"
                  },
                  "customMessage": {
                    "~standard": { "vendor": "zod", "version": 1 },
                    "def": {
                      "type": "default",
                      "innerType": {
                        "~standard": { "vendor": "zod", "version": 1 },
                        "def": { "type": "string" },
                        "type": "string",
                        "format": null,
                        "minLength": null,
                        "maxLength": null
                      },
                      "defaultValue": "Current password is not valid"
                    },
                    "type": "default"
                  }
                },
                "checks": []
              },
              "type": "object"
            },
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AppErrorDto_400_35" }
              }
            }
          },
          "404": {
            "schema": {
              "~standard": { "vendor": "zod", "version": 1 },
              "def": {
                "type": "object",
                "shape": {
                  "key": {
                    "~standard": { "vendor": "zod", "version": 1 },
                    "def": {
                      "type": "default",
                      "innerType": {
                        "~standard": { "vendor": "zod", "version": 1 },
                        "def": { "type": "string" },
                        "type": "string",
                        "format": null,
                        "minLength": null,
                        "maxLength": null
                      },
                      "defaultValue": "AppErrorCode"
                    },
                    "type": "default"
                  },
                  "code": {
                    "~standard": { "vendor": "zod", "version": 1 },
                    "def": {
                      "type": "default",
                      "innerType": {
                        "~standard": { "vendor": "zod", "version": 1 },
                        "def": { "type": "number", "checks": [] },
                        "type": "number",
                        "minValue": null,
                        "maxValue": null,
                        "isInt": false,
                        "isFinite": true,
                        "format": null
                      },
                      "defaultValue": 404
                    },
                    "type": "default"
                  },
                  "isHttpError": {
                    "~standard": { "vendor": "zod", "version": 1 },
                    "def": {
                      "type": "default",
                      "innerType": {
                        "~standard": { "vendor": "zod", "version": 1 },
                        "def": { "type": "boolean" },
                        "type": "boolean"
                      },
                      "defaultValue": true
                    },
                    "type": "default"
                  },
                  "name": {
                    "~standard": { "vendor": "zod", "version": 1 },
                    "def": {
                      "type": "default",
                      "innerType": {
                        "~standard": { "vendor": "zod", "version": 1 },
                        "def": { "type": "string" },
                        "type": "string",
                        "format": null,
                        "minLength": null,
                        "maxLength": null
                      },
                      "defaultValue": "AppErrorCode"
                    },
                    "type": "default"
                  },
                  "customMessage": {
                    "~standard": { "vendor": "zod", "version": 1 },
                    "def": {
                      "type": "default",
                      "innerType": {
                        "~standard": { "vendor": "zod", "version": 1 },
                        "def": { "type": "string" },
                        "type": "string",
                        "format": null,
                        "minLength": null,
                        "maxLength": null
                      },
                      "defaultValue": "User not found"
                    },
                    "type": "default"
                  }
                },
                "checks": []
              },
              "type": "object"
            },
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AppErrorDto_404_23" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "tags": ["Account"]
      }
    },
    "/account/forgot-password": {
      "post": {
        "operationId": "AccountController_forgotPassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ForgotPasswordDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Account"]
      }
    },
    "/account/confirm-reset": {
      "post": {
        "operationId": "AccountController_confirmResetPassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmResetPasswordDto"
              }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Account"]
      }
    },
    "/account/profile": {
      "get": {
        "operationId": "AccountController_getProfile",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "security": [{ "bearer": [] }],
        "tags": ["Account"]
      },
      "put": {
        "operationId": "AccountController_updateProfile",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateUserNameDto" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "security": [{ "bearer": [] }],
        "tags": ["Account"]
      }
    },
    "/account/set-password": {
      "post": {
        "operationId": "AccountController_setPassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SetPasswordDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "security": [{ "bearer": [] }],
        "tags": ["Account"]
      }
    },
    "/account/email/change": {
      "post": {
        "operationId": "AccountController_requestEmailChange",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/EmailChangeRequestDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "security": [{ "bearer": [] }],
        "tags": ["Account"]
      }
    },
    "/account/email/change/verify": {
      "post": {
        "operationId": "AccountController_verifyEmailChange",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/EmailChangeVerifyDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "security": [{ "bearer": [] }],
        "tags": ["Account"]
      }
    },
    "/account/can-set-password": {
      "get": {
        "operationId": "AccountController_canSetPassword",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Account"]
      }
    },
    "/markdown/extract-sections": {
      "post": {
        "operationId": "MarkdownController_extractSections",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ExtractSectionsDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Markdown"]
      }
    },
    "/markdown/search-sections": {
      "post": {
        "operationId": "MarkdownController_searchSections",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SearchSectionsDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Markdown"]
      }
    },
    "/mcp": {
      "post": {
        "operationId": "StreamableController_handleMcpPost",
        "parameters": [],
        "responses": { "201": { "description": "" } },
        "tags": ["Streamable"]
      },
      "get": {
        "operationId": "StreamableController_handleMcpGet",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Streamable"]
      },
      "delete": {
        "operationId": "StreamableController_handleMcpDelete",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Streamable"]
      }
    },
    "/dify/chat/stream": {
      "post": {
        "operationId": "DifyController_streamChatMessage",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ChatMessageRequestDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "security": [{ "bearer": [] }],
        "tags": ["Dify"]
      }
    },
    "/jwt-state/create": {
      "post": {
        "operationId": "JwtStateController_createJWT",
        "parameters": [],
        "responses": { "201": { "description": "" } },
        "tags": ["JwtState"]
      }
    },
    "/jwt-state": {
      "get": {
        "operationId": "JwtStateController_findAll",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["JwtState"]
      }
    },
    "/jwt-state/{id}": {
      "get": {
        "operationId": "JwtStateController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["JwtState"]
      },
      "put": {
        "operationId": "JwtStateController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateJwtStateDto" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["JwtState"]
      },
      "delete": {
        "operationId": "JwtStateController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["JwtState"]
      }
    },
    "/auth/providers": {
      "get": {
        "operationId": "AuthController_getProviders",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Auth"]
      }
    },
    "/auth/register": {
      "post": {
        "operationId": "AuthController_register",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RegisterDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Auth"]
      }
    },
    "/auth/login/{provider}": {
      "get": {
        "operationId": "AuthController_loginWithProvider",
        "parameters": [
          {
            "name": "provider",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "callback_url",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Auth"]
      }
    },
    "/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LoginDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Auth"]
      }
    },
    "/auth/refresh": {
      "post": {
        "operationId": "AuthController_refresh",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RefreshTokenDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Auth"]
      }
    },
    "/auth/profile": {
      "get": {
        "operationId": "AuthController_getProfile",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "security": [{ "bearer": [] }],
        "tags": ["Auth"]
      }
    },
    "/auth/logout": {
      "post": {
        "operationId": "AuthController_logout",
        "parameters": [],
        "responses": { "201": { "description": "" } },
        "tags": ["Auth"]
      }
    },
    "/auth/state": {
      "post": {
        "operationId": "AuthController_createAuthState",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AuthStateDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Auth"]
      }
    },
    "/auth/callback/{provider}": {
      "get": {
        "operationId": "AuthController_handleProviderCallback",
        "parameters": [
          {
            "name": "provider",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "code",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "state",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "error",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "callbackUrl",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Auth"]
      }
    },
    "/auth/verify": {
      "post": {
        "operationId": "AuthController_verifyToken",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/VerifyTokenDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Auth"]
      }
    },
    "/auth/mfa/setup": {
      "post": {
        "operationId": "MfaController_setup",
        "parameters": [],
        "responses": { "201": { "description": "" } },
        "tags": ["Mfa"]
      }
    },
    "/auth/mfa/backup-codes": {
      "get": {
        "operationId": "MfaController_getBackupCodes",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Mfa"]
      }
    },
    "/auth/mfa": {
      "delete": {
        "operationId": "MfaController_disableMfa",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Mfa"]
      }
    },
    "/auth/mfa/verify": {
      "post": {
        "operationId": "MfaController_verify",
        "parameters": [],
        "responses": { "201": { "description": "" } },
        "tags": ["Mfa"]
      }
    },
    "/gmo/coin/ticker/stream": {
      "get": {
        "operationId": "CoinController_getTickerStream",
        "parameters": [
          {
            "name": "symbols",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Coin"]
      }
    },
    "/gmo/coin/status": {
      "get": {
        "operationId": "CoinController_getStatus",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Coin"]
      }
    },
    "/gmo/coin/ticker": {
      "get": {
        "operationId": "CoinController_getTicker",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Coin"]
      }
    },
    "/gmo/coin/klines": {
      "get": {
        "operationId": "CoinController_getKline",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Coin"]
      }
    },
    "/gmo/coin/rules": {
      "get": {
        "operationId": "CoinController_getRules",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Coin"]
      }
    },
    "/gmo/coin/tickers": {
      "get": {
        "operationId": "CoinController_getTickers",
        "parameters": [
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Coin"]
      }
    },
    "/role/request-update": {
      "get": {
        "operationId": "RoleController_requestForUpdateRoles",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Role"]
      }
    },
    "/users/me/discord": {
      "get": {
        "operationId": "UsersController_getDiscordMe",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DiscordUser" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "tags": ["Users"]
      }
    },
    "/users/me/google": {
      "get": {
        "operationId": "UsersController_getGoogleMe",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GoogleUser" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "tags": ["Users"]
      }
    },
    "/users/list": {
      "get": {
        "operationId": "UsersController_findAllUsers",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "security": [{ "bearer": [] }],
        "tags": ["Users"]
      }
    }
  },
  "info": {
    "title": "Karasu LAB API",
    "description": "",
    "version": "1.0.0",
    "contact": {}
  },
  "tags": [],
  "servers": [{ "url": "https://api.karasu256.com" }],
  "components": {
    "securitySchemes": {
      "bearer": { "scheme": "bearer", "bearerFormat": "JWT", "type": "http" }
    },
    "schemas": {
      "ResetPasswordDto": {
        "type": "object",
        "properties": {
          "oldPassword": { "type": "string", "minLength": 8 },
          "newPassword": { "type": "string", "minLength": 8 }
        },
        "required": ["oldPassword", "newPassword"]
      },
      "ResetPasswordResponseDto": {
        "type": "object",
        "properties": {
          "message": {
            "default": "Password updated successfully",
            "type": "string"
          },
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "cuid",
                "pattern": "^[cC][^\\s-]{8,}$"
              },
              "username": { "type": "string" },
              "email": { "type": "string" },
              "providers": { "type": "array", "items": { "type": "string" } },
              "createdAt": { "type": "string" },
              "updatedAt": { "type": "string" }
            },
            "required": [
              "id",
              "username",
              "email",
              "providers",
              "createdAt",
              "updatedAt"
            ]
          }
        },
        "required": ["user"]
      },
      "AppErrorDto_400_35": {
        "type": "object",
        "properties": {
          "key": { "default": "AppErrorCode", "type": "string" },
          "code": { "default": 400, "type": "number" },
          "isHttpError": { "default": true, "type": "boolean" },
          "name": { "default": "AppErrorCode", "type": "string" },
          "customMessage": {
            "default": "Current password is not valid",
            "type": "string"
          }
        }
      },
      "AppErrorDto_404_23": {
        "type": "object",
        "properties": {
          "key": { "default": "AppErrorCode", "type": "string" },
          "code": { "default": 404, "type": "number" },
          "isHttpError": { "default": true, "type": "boolean" },
          "name": { "default": "AppErrorCode", "type": "string" },
          "customMessage": { "default": "User not found", "type": "string" }
        }
      },
      "ForgotPasswordDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
          }
        },
        "required": ["email"]
      },
      "ConfirmResetPasswordDto": {
        "type": "object",
        "properties": {
          "resetCode": { "type": "string", "minLength": 6, "maxLength": 6 },
          "newPassword": { "type": "string", "minLength": 8 }
        },
        "required": ["resetCode", "newPassword"]
      },
      "UpdateUserNameDto": { "type": "object", "properties": {} },
      "SetPasswordDto": {
        "type": "object",
        "properties": { "newPassword": { "type": "string", "minLength": 8 } },
        "required": ["newPassword"]
      },
      "EmailChangeRequestDto": {
        "type": "object",
        "properties": {
          "newEmail": {
            "type": "string",
            "format": "email",
            "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
          }
        },
        "required": ["newEmail"]
      },
      "EmailChangeVerifyDto": {
        "type": "object",
        "properties": {
          "verificationCode": {
            "type": "string",
            "minLength": 6,
            "maxLength": 6
          }
        },
        "required": ["verificationCode"]
      },
      "ExtractSectionsDto": {
        "type": "object",
        "properties": { "markdown": { "type": "string", "minLength": 1 } },
        "required": ["markdown"]
      },
      "SearchSectionsDto": {
        "type": "object",
        "properties": {
          "markdown": { "type": "string", "minLength": 1 },
          "searchTerm": { "type": "string", "minLength": 1 }
        },
        "required": ["markdown", "searchTerm"]
      },
      "ChatMessageRequestDto": {
        "type": "object",
        "properties": {
          "query": { "type": "string", "minLength": 1 },
          "inputs": {
            "default": {},
            "type": "object",
            "propertyNames": { "type": "string" },
            "additionalProperties": {}
          },
          "user": { "type": "string", "minLength": 1 },
          "conversation_id": { "type": "string" },
          "files": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": ["image", "document", "audio", "video", "custom"]
                },
                "transfer_method": {
                  "type": "string",
                  "enum": ["remote_url", "local_file"]
                },
                "url": { "type": "string" },
                "upload_file_id": { "type": "string" }
              },
              "required": ["type", "transfer_method"]
            }
          },
          "auto_generate_name": { "default": true, "type": "boolean" },
          "workflow_id": { "type": "string" },
          "trace_id": { "type": "string" }
        },
        "required": ["query", "user"]
      },
      "UpdateJwtStateDto": { "type": "object", "properties": {} },
      "RegisterDto": {
        "type": "object",
        "properties": {
          "username": { "type": "string" },
          "email": {
            "type": "string",
            "format": "email",
            "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
          },
          "password": { "type": "string", "minLength": 6 }
        },
        "required": ["username", "email", "password"]
      },
      "LoginDto": {
        "type": "object",
        "properties": {
          "usernameOrEmail": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "password": { "type": "string", "minLength": 8, "maxLength": 128 }
        },
        "required": ["usernameOrEmail", "password"]
      },
      "RefreshTokenDto": {
        "type": "object",
        "properties": { "refresh_token": { "type": "string" } },
        "required": ["refresh_token"]
      },
      "AuthStateDto": {
        "type": "object",
        "properties": {
          "provider": { "type": "string" },
          "callbackUrl": { "type": "string", "format": "uri" }
        },
        "required": ["provider", "callbackUrl"]
      },
      "VerifyTokenDto": {
        "type": "object",
        "properties": {
          "stateCode": { "type": "string" },
          "oneTimeToken": { "type": "string" }
        },
        "required": ["stateCode", "oneTimeToken"]
      },
      "DiscordUser": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "x-nestjs_zod-has-null": true },
          "clan": {
            "anyOf": [
              {
                "type": "object",
                "properties": {
                  "tag": { "type": "string" },
                  "badge": { "type": "string" },
                  "identity_enabled": { "type": "boolean" },
                  "identity_guild_id": { "type": "string" }
                },
                "required": [
                  "tag",
                  "badge",
                  "identity_enabled",
                  "identity_guild_id"
                ]
              },
              { "type": "null" }
            ],
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-empty-type": true
          },
          "email": {
            "type": "string",
            "format": "email",
            "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$",
            "x-nestjs_zod-has-null": true
          },
          "flags": { "type": "number", "x-nestjs_zod-has-null": true },
          "avatar": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-empty-type": true
          },
          "banner": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-empty-type": true
          },
          "locale": { "type": "string", "x-nestjs_zod-has-null": true },
          "username": { "type": "string", "x-nestjs_zod-has-null": true },
          "verified": { "type": "boolean", "x-nestjs_zod-has-null": true },
          "global_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-empty-type": true
          },
          "mfa_enabled": { "type": "boolean", "x-nestjs_zod-has-null": true },
          "accent_color": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-empty-type": true
          },
          "banner_color": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-empty-type": true
          },
          "collectibles": {
            "anyOf": [{}, { "type": "null" }],
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-empty-type": true
          },
          "premium_type": { "type": "number", "x-nestjs_zod-has-null": true },
          "public_flags": { "type": "number", "x-nestjs_zod-has-null": true },
          "discriminator": { "type": "string", "x-nestjs_zod-has-null": true },
          "primary_guild": {
            "anyOf": [
              {
                "type": "object",
                "properties": {
                  "tag": { "type": "string" },
                  "badge": { "type": "string" },
                  "identity_enabled": { "type": "boolean" },
                  "identity_guild_id": { "type": "string" }
                },
                "required": [
                  "tag",
                  "badge",
                  "identity_enabled",
                  "identity_guild_id"
                ]
              },
              { "type": "null" }
            ],
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-empty-type": true
          },
          "display_name_styles": {
            "anyOf": [{}, { "type": "null" }],
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-empty-type": true
          },
          "avatar_decoration_data": {
            "anyOf": [
              {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "asset": { "type": "string" },
                      "sku_id": { "type": "string" }
                    },
                    "required": ["asset", "sku_id"]
                  },
                  { "type": "null" }
                ]
              },
              { "type": "null" }
            ],
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-empty-type": true
          }
        },
        "required": [
          "id",
          "email",
          "flags",
          "avatar",
          "banner",
          "locale",
          "username",
          "verified",
          "global_name",
          "mfa_enabled",
          "accent_color",
          "banner_color",
          "collectibles",
          "premium_type",
          "public_flags",
          "discriminator",
          "display_name_styles",
          "avatar_decoration_data"
        ]
      },
      "GoogleUser": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "email": {
            "type": "string",
            "format": "email",
            "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
          },
          "picture": { "type": "string", "format": "uri" },
          "given_name": { "type": "string" },
          "family_name": { "type": "string" },
          "verified_email": { "type": "boolean" }
        },
        "required": [
          "id",
          "name",
          "email",
          "picture",
          "given_name",
          "family_name",
          "verified_email"
        ]
      }
    }
  }
}
